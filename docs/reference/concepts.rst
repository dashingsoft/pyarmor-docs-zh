==========
 Concepts
==========

.. glossary::

  Activation File

    A text file used to initial registration :term:`Pyarmor License`

    When purchasing any :term:`Pyarmor License`, an activation file is be sent
    to registration email after payment is completed.

  BCC Mode

    An obfuscation method of Pyarmor by converting Python functions to C functions

  Registration File

    A zip file generated after initial registration is successful. It's used to
    register :term:`Pyarmor License` excpet initial registration.

  Pyarmor

    Pyarmor is product domain, the goal is to provide functions
    and services to obfuscate Python scripts in high security and
    high performance. The mission of Pyarmor is let Python use
    easily in commercial product.

    Pyarmor is composed of

      - :term:`Pyarmor Home`
      - :term:`pyarmor package`

  Pyarmor Basic

    A :term:`Pyarmor License` type

  Pyarmor Group

    A :term:`Pyarmor License` type

  Pyarmor Home

    Host in github: |Home|

    It serves open source part of Pyarmor, `issues`_ and documentations.

  Pyarmor License

    Issued by Pyarmor Team to unlock some limitations in Pyarmor trial version.

    Refer to :doc:`Pyarmor License Types <../licenses>`

  Pyarmor Package

    A :term:`Python Package`, it includes

      * :mod:`pyarmor`
      * :mod:`pyarmor.cli`
      * :mod:`pyarmor.cli.core`
      * :mod:`pyarmor.cli.runtime`

  Pyarmor Pro

    A :term:`Pyarmor License` type

  Python

    A program language.

  Python Script

    A file that serves as an organizational unit of Python code.

    Refer to https://docs.python.org/3.11/glossary.html#term-module

  Python Package

    Refer to https://docs.python.org/3.11/glossary.html#term-package

  RFT Mode

    An obfuscation method of Pyarmor by renaming function/class in the scripts

  Runtime Files

    All the files required to run the obfuscated scripts.

    Generally it equals :term:`Runtime Package`. If :term:`outer key` is used,
    plus this outer key file.

  Runtime Key

    The settings of obfuscated scripts. It may include the expired date, device
    information of bind to obfuscated scripts. Also include all the flags to
    control the behaviours of obfuscated scripts.

    Generally it's embedded into :term:`Runtime Package`, but it also could be
    stored to a independent file :term:`outer key`

  Runtime Package

    A :term:`Python Package` generally named ``pyarmor_runtime_000000``.

    When obfuscating the scripts, it's be generated at the same time.

    It's required to run the obfuscated scripts.

  Outer Key

    A file generally named ``pyarmor.rkey`` to store :term:`Runtime Key`

    The outer key file must be located in one of path

      - :term:`Runtime package`
      - :envvar:`PYARMOR_RKEY`
      - :attr:`sys._MEIPASS`
      - Current path

  Home Path

    Store Pyarmor registration file, global configuration, other data file
    generated by :command:`pyarmor`, the default path is user home path
    :file:`~/.pyarmor`

  Global Configuration Path

    Store Pyarmor local configuration file, default is :file:`.pyarmor` in the
    current path

  Local Configuration Path

    Store Pyarmor local configuration file, default is :file:`.pyarmor` in the
    current path

  Registration File Path

    Store registration information of Pyarmor License, default is same as
    :term:`Home Path`

  Build Machine

    The device in which to install pyarmor, and to run pyarmor to generate
    obfuscated scripts.

  Pyarmor Users

    Developers or organizations who use Pyarmor to obfuscate their Python
    scripts

  Target Device

    In which run the obfuscated scripts distributed by :term:`Pyarmor Users`,
    generally it's in customer side

  Platform

    The standard platform name defined by Pyarmor. It's composed of os.arch.

    Supported platforms list:

      * Windows
        - windows.x86_64
        - windows.i386
      * Many Linuxs
        - linux.x86_64
        - linux.i386
        - linux.aarch64
      * Apple Intel and Silicon
        - darwin.x86_64
        - darwin.aarch64

  JIT

    Abbr. JUST-IN-TIME, just generating machine instructions in run time.

  extension module

    A module written in C or C++, using Pythonâ€™s C API to interact with the core
    and with user code.

.. module:: pyarmor
    :synopsis: A command line tool used to obfuscate Python scripts

.. module:: pyarmor.cli
.. module:: pyarmor.cli.core
    :synopsis: A binary wheel to provide extension modules to pyarmor

.. module:: pyarmor.cli.runtime
    :synopsis: A binary wheel for pyarmor to obfuscate scripts to run
               in multiple arches.

.. include:: ../_common_definitions.txt
